<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="board">
 
 	<!-- 공지 리스트 갯수 검색 -->
 	<select id="selectNoticeCount" resultType="int">
 		select count(*) from notice
 	</select>
 	
 	<!-- 공지 리스트 검색 -->
 	<select id="selectNotice" parameterType="boardDTO" resultType="boardDTO">
	 	select *
		from (select index_num, title, writer, nick, reg_date, views, rownum r
      		  from (select n.index_num, n.title, n.writer, m.nick, n.reg_date, n.views 
            		from notice n, member m
            		where n.writer = m.index_num
            		order by n.index_num desc)
      		  order by index_num desc)
      	<where>
 			<if test="startRow > 0"><![CDATA[r >= #{startRow}]]></if>
 			<if test="endRow > 0 and endRow > startRow"><![CDATA[and r <= #{endRow}]]></if>
 		</where>
	</select>
	
	
	<!-- 관리자 고유번호 검색 -->
	<select id="selectAdmin" resultType="int">
		select index_num
		from member
		where status = 100
	</select>
	
	<!-- 사용자 고유번호 검색 -->
	<select id="selectMember"  resultType="boardDTO" >
		select index_num
		from member
		where status = 1
	</select>
	
	<!-- 공지 작성 -->
 	<insert id="insertBoard" parameterType="boardDTO">
 		insert into notice (index_num, title, writer, content, reg_date) 
 		values (NOTICE_SEQ.nextval, #{title}, #{writer}, #{content}, sysdate)
 	</insert>
	
	
	<!-- 공지 상세보기 -->
	<select id="selectNoticeDetail" parameterType="int" resultType="boardDTO">
	 	select n.index_num, n.title, m.nick, n.content, n.views
		from notice n, member m
		where n.writer = m.index_num  
		and n.index_num = #{index_num}
	</select>
	
	
	<!-- 공지 수정 -->
	<update id="noticeUpdate">
		update notice
		set content = #{content}, title = #{title}
		where index_num = #{index_num}
	</update>
	
	<!-- 공지 삭제 -->
	<delete id="noticeDelete">
		delete
		from notice
		where index_num = #{index_num}
	</delete>
	
	<!-- 해당 공지사항 클릭시 조회수 증가  -->
 	<update id="updateViewsNotice" parameterType="int">
    	update notice set views=views+1 where index_num=#{index_num}
 	</update>
 	
 	<!-- 해당 리뷰 클릭시 조회수 증가  -->
 	<update id="updateViewsReview" parameterType="int">
 		update plan_review set views = views+1
		<where> 
			<if test="index_num > 0"> index_num = #{index_num}</if>
		</where>
 	</update>
	
	<!-- 인기 여행 리뷰 리스트 -->
	<select id="popularReview" parameterType="int" resultType="boardDTO">
		select *
		from (select prv.index_num, prv.title, prv.writer, m.nick, prv.views, prv.reg_date, 
					 dense_rank() over (order by prv.views desc) rank
      		  from plan_review prv, member m
      		  where prv.writer = m.index_num)     
		<where>
			<if test="rownum > 0"><![CDATA[rownum <= #{value}]]></if>
		</where>
	</select>
	
	<!-- 인기 여행 리뷰 태그 리스트 갯수 -->
	<select id="popularTagReviewCount" parameterType="java.util.List" resultType="int">
		select count(*)
		from plan_review p, plan_review_tag pt, tag t
		where p.index_num = pt.review
		and pt.tag = t.index_num
        and p.index_num in 
        <foreach collection="list" item="index_num" open="(" close=")" separator=",">
        	#{index_num}
        </foreach>
	</select>
	
	<!-- 인기 여행 리뷰 태그 리스트 -->
	<select id="popularTagReview" parameterType="java.util.List" resultType="boardDTO">
		select p.index_num, p.title, t.name
		from plan_review p, plan_review_tag pt, tag t
		where p.index_num = pt.review
		and pt.tag = t.index_num
        and p.index_num in 
        <foreach collection="list" item="index_num" open="(" close=")" separator=",">
        	#{index_num}
        </foreach>
	</select>
	
	<!-- 여행 리뷰 리스트 갯수 -->
	<select id="selectReviewCount" resultType="int">
		select count(*) from plan_review
	</select>
	
	<!-- 여행 리뷰 리스트 -->
 	<select id="selectReview" parameterType="boardDTO" resultType="boardDTO">
	 	select *
		from (select index_num, title, nick, content, views, reg_date, picture1, rownum r
      		  from (select p.index_num, p.title, m.nick, p.content, p.views, p.reg_date, p.picture1
            		from plan_review p, member m
            		where m.index_num = p.writer
            		order by p.index_num desc)
      		  order by index_num desc)
      	<where>
 			<if test="startRow > 0"><![CDATA[r >= #{startRow}]]></if>
 			<if test="endRow > 0 and endRow > startRow"><![CDATA[and r <= #{endRow}]]></if>
 		</where>	  
	</select>
	
	<!-- 여행 리뷰 태그 리스트 갯수 -->
	<select id="selectReviewTagCount" resultType="int">
		select count(*)
		from plan_review p, plan_review_tag pt, tag t
		where p.index_num = pt.review
		and pt.tag = t.index_num
	</select>
	
	<!-- 여행 리뷰 태그 리스트 -->
	<select id="selectReviewTag" resultType="boardDTO">
		select p.index_num, p.title, t.name
		from plan_review p, plan_review_tag pt, tag t
		where p.index_num = pt.review
		and pt.tag = t.index_num
	</select>
	
	
	<!-- 여행 리뷰 상세 보기 -->
 	<select id="selectReviewDetail" parameterType="int" resultType="boardDTO">
	 	select p.index_num, p.title, m.nick, p.content, p.views,
	 			p.picture1, p.picture2, p.picture3, p.picture4, p.picture5
		from plan_review p, member m
		where p.writer = m.index_num
		and p.index_num = #{index_num}
	</select>
	
	<!-- 여행 리뷰 상세 보기 태그 -->
	<select id="selectReviewDetailTag" parameterType="int" resultType="boardDTO">
		select p.index_num, p.title, t.name
		from plan_review p, plan_review_tag pt, tag t
		where p.index_num = pt.review
		and pt.tag = t.index_num
		and p.index_num = #{index_num}
	</select>
 
 
 	<!-- 여행 리뷰 작성 -->
 	<insert id="insertReview" parameterType="boardDTO">
	 	insert into plan_review (index_num, title, writer, content, reg_date,
	 							 picture1, picture2, picture3, picture4, picture5) 
 		values (plan_review_SEQ.nextval, #{title}, #{writer}, #{content}, sysdate,
 				#{picture1, jdbcType=VARCHAR}, #{picture2, jdbcType=VARCHAR}, #{picture3, jdbcType=VARCHAR},
 				#{picture4, jdbcType=VARCHAR}, #{picture5, jdbcType=VARCHAR})
	</insert>
	
	<!-- 새로 들어온 리뷰번호 가져오기 -->
	<select id="maxReview" resultType="int">
		select max(index_num) from plan_review
	</select>
	
	<!-- 새로 들어온 리뷰 태그 추가 -->
	<insert id="insertTag" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="INSERT ALL " separator=" " close="SELECT * FROM DUAL">
            into plan_review_tag (review, tag)
            values (#{item.review}, #{item.tag})
        </foreach>
 	</insert>
	
	<!-- 여행 리뷰 리스트 갯수 -->
	<select id="selectMyReviewCount" parameterType="int" resultType="int">
		select count(*) from plan_review
		<where>
			<if test="writer > 0">writer = #{value}</if>
		</where> 
	</select>
	
	<!-- 태그 가져오가 -->
	<select id="selectTag" resultType="boardDTO">
		select index_num, name
		from tag
	</select>
	
	<!-- 나의 여행 리뷰 리스트(마이페이지) -->
 	<select id="selectMyReview" parameterType="boardDTO"  resultType="boardDTO">
	 	select *
		from (select index_num, title, nick, content, views, reg_date, picture1, rownum r         
      		  from (select p.index_num, p.title, m.nick, p.content, p.views, p.reg_date, p.picture1
           			from plan_review p, member m
           			where m.index_num = p.writer and p.writer = #{writer}
		   			order by p.index_num desc)
      		  order by index_num desc)
		<where>
			<if test="startRow > 0"><![CDATA[r >= #{startRow}]]></if>
 			<if test="endRow > 0 and endRow > startRow"><![CDATA[and r <= #{endRow}]]></if>
		</where>
	</select>
	
	<!-- 여행 리뷰 태그 리스트 갯수 -->
	<select id="selectMyReviewTagCount" parameterType="int" resultType="int">
		select count(*)
		from plan_review p, plan_review_tag pt, tag t
		where p.index_num = pt.review
		and pt.tag = t.index_num
		and p.writer = #{value}
	</select>
	
	<!-- 여행 리뷰 태그 리스트 -->
	<select id="selectMyReviewTag" parameterType="int" resultType="boardDTO">
		select p.index_num, p.title, t.name
		from plan_review p, plan_review_tag pt, tag t
		where p.index_num = pt.review
		and pt.tag = t.index_num
		and p.writer = #{value}
	</select>
	
	<!-- 리뷰 댓글수 검색 sql문 -->
 	<select id="selectReviewReplyCount" parameterType="int" resultType="int">
 		select count(*)
 		from PLAN_REVIEW_REPLY pr, member m, plan_review p
 		where pr.writer = m.index_num
 		and pr.review = p.index_num
 		and p.index_num = #{index_num}
 	</select>
	
	<!-- 리뷰의 전체 댓글 검색 sql문 -->
 	<select id="selectReviewReply" parameterType="boardDTO" resultType="boardDTO">
 		select *
		from (select index_num, writer, nick, content, review, reg_date, rownum r
              from (select pr.index_num, pr.writer, m.nick, pr.content, pr.review, pr.reg_date
                    from plan_review_reply pr, member m
                    where pr.writer = m.index_num
                    and pr.review = #{review}
                    order by pr.index_num desc)
              order by index_num desc)
        <where>
			<if test="startRow > 0"><![CDATA[r >= #{startRow}]]></if>
 			<if test="endRow > 0 and endRow > startRow"><![CDATA[and r <= #{endRow}]]></if>
		</where>          
 	</select>
 	
 	<!-- 리뷰 댓글 등록 -->
 	<insert id="insertReviewReply" parameterType="boardDTO">
 		insert into plan_review_reply
 		values(plan_review_reply_seq.nextval, #{writer}, #{content}, #{review}, sysdate)
 	</insert>
 	
 	<!-- 리뷰 댓글 삭제 -->
 	<delete id="deleteReviewReply" parameterType="int">
 		delete from plan_review_reply
 		<where>
 			<if test="index_num > 0">index_num = #{index_num}</if>
 		</where>
 	</delete>
 	
 	<!-- 글 삭제 시 댓글 강제 삭제 -->
 	<delete id="deleteReply" parameterType="int">
 		delete from plan_review_reply
 		<where>
 			<if test="review > 0">review = #{value}</if>
 		</where>
 	</delete>
 	
	
	<!-- 나의 여행 리뷰 검색 리스트 갯수(제목) -->
	<select id="searchTitleMyReviewCount" parameterType="searchDTO" resultType="int">
		select count(*) from plan_review p
		<where>
			<if test="writer > 0">p.writer = #{writer}</if>
		</where>
		and ${thema} like '%' || #{keyword} || '%'
	</select>
	
	<!-- 나의 여행 리뷰 검색 리스트(제목) -->
 	<select id="searchTitleMyReview" parameterType="searchDTO"  resultType="boardDTO">
	 	select *
		from (select index_num, title, nick, content, views, reg_date, picture1, rownum r         
      		  from (select p.index_num, p.title, m.nick, p.content, p.views, p.reg_date, picture1
           			from plan_review p, member m
           			where m.index_num = p.writer and p.writer = #{writer}
           			and ${thema} like '%' || #{keyword} || '%'
		   			order by p.index_num desc)
      		  order by index_num desc)
		<where>
			<if test="startRow > 0"><![CDATA[r >= #{startRow}]]></if>
 			<if test="endRow > 0 and endRow > startRow"><![CDATA[and r <= #{endRow}]]></if>
		</where>
	</select>
	
	<!-- 리뷰 태그 검색 리스트 갯수(제목) -->
	<select id="searchTitleMyReviewTagCount" parameterType="searchDTO" resultType="int">
		select count(*)
		from plan_review p, plan_review_tag pt, tag t
		where p.index_num = pt.review
		and pt.tag = t.index_num
		and p.writer = #{writer}
		and ${thema} like '%' || #{keyword} || '%'
	</select>
	
	<!-- 리뷰 태그 검색 리스트(제목) -->
	<select id="searchTitleMyReviewTag" parameterType="searchDTO" resultType="boardDTO">
		select p.index_num, p.title, t.name
		from plan_review p, plan_review_tag pt, tag t
		where p.index_num = pt.review
		and pt.tag = t.index_num
		and p.writer = #{writer}
		and ${thema} like '%' || #{keyword} || '%'
	</select>
	
	<!-- 리뷰 수정 -->
	<update id="reviewUpdate" parameterType="boardDTO">
		update plan_review
		set content = #{content}, title = #{title}, picture1 = #{picture1, jdbcType=VARCHAR},
						picture2 = #{picture2, jdbcType=VARCHAR}, picture3= #{picture3, jdbcType=VARCHAR},
				 		picture4 = #{picture4, jdbcType=VARCHAR}, picture5 = #{picture5, jdbcType=VARCHAR}
		where index_num = #{index_num}
	</update>
	
	<!-- 수정 시 기존 태그 삭제 -->
	<delete id="deleteTag" parameterType="int">
		DELETE FROM plan_review_tag 
        WHERE review = #{value}
	</delete>
	
	<!-- 수정시 태그 목록 갯수 -->
	<select id="countReviewUpdateTag" parameterType="int" resultType="int">
		select count(*)  
		from plan_review_tag rt, tag t
		where rt.tag = t.index_num
		and rt.review = #{review}
	</select>
	
	<!-- 수정시 태그 목록 -->
	<select id="selectreviewUpdateTag" parameterType="int" resultType="boardDTO">
		select rt.tag, rt.review , t.name  
		from plan_review_tag rt, tag t
		where rt.tag = t.index_num
		and rt.review = #{review}
	</select>
	
 	<!-- 여행 리뷰 삭제 -->
	<delete id="reviewDelete">
		delete
		from plan_review
		where index_num = #{index_num}
	</delete>
	
	<!-- ==============리뷰 검색================= -->
	<!-- 여행 리뷰 검색 리스트 갯수(제목, 닉네임) -->
	<select id="searchReviewCount" parameterType="searchDTO" resultType="int">
		select count(*) from plan_review p, member rm
		where p.writer = rm.index_num
		and ${thema} like '%' || #{keyword} || '%'
	</select>
	
	<!-- 여행 리뷰 검색 리스트(제목, 닉네임) -->
 	<select id="searchReview" parameterType="searchDTO"  resultType="boardDTO">
	 	select *
		from (select index_num, title, nick, content, views, reg_date, picture1, rownum r         
      		  from (select p.index_num, p.title, rm.nick, p.content, p.views, p.reg_date, p.picture1
           			from plan_review p, member rm
           			where rm.index_num = p.writer
           			and ${thema} like '%' || #{keyword} || '%'
		   			order by p.index_num desc)
      		  order by index_num desc)
		<where>
			<if test="startRow > 0"><![CDATA[r >= #{startRow}]]></if>
 			<if test="endRow > 0 and endRow > startRow"><![CDATA[and r <= #{endRow}]]></if>
		</where>
	</select>
	
	<!-- 여행 리뷰 태그 검색 리스트 갯수(제목, 닉네임) -->
	<select id="searchReviewTagCount" parameterType="searchDTO" resultType="int">
		select count(*)
		from plan_review p, plan_review_tag pt, tag t, member rm
		where p.index_num = pt.review
		and pt.tag = t.index_num
		and p.writer = rm.index_num
		and ${thema} like '%' || #{keyword} || '%'
	</select>
	
	<!-- 여행 리뷰 태그 검색 리스트(제목, 닉네임) -->
	<select id="searchReviewTag" parameterType="searchDTO" resultType="boardDTO">
		select p.index_num, p.title, t.name
		from plan_review p, plan_review_tag pt, tag t, member rm
		where p.index_num = pt.review
		and pt.tag = t.index_num
		and p.writer = rm.index_num
		and ${thema} like '%' || #{keyword} || '%'
	</select>	
	
	
	<!-- ==============공지 검색================= -->
	<!-- 공지 검색 리스트 갯수(제목, 닉네임) -->
	<select id="searchNoticeCount" parameterType="searchDTO" resultType="int">
		select count(*) from notice n, member rm
		where n.writer = rm.index_num
		and ${thema} like '%' || #{keyword} || '%'
	</select>
	
	<!-- 공지 검색 리스트(제목, 닉네임) -->
 	<select id="searchNotice" parameterType="searchDTO"  resultType="boardDTO">
	 	select *
		from (select index_num, title, nick, content, views, reg_date, rownum r         
      		  from (select n.index_num, n.title, rm.nick, n.content, n.views, n.reg_date
           			from notice n, member rm
           			where rm.index_num = n.writer
           			and ${thema} like '%' || #{keyword} || '%'
		   			order by n.index_num desc)
      		  order by index_num desc)
		<where>
			<if test="startRow > 0"><![CDATA[r >= #{startRow}]]></if>
 			<if test="endRow > 0 and endRow > startRow"><![CDATA[and r <= #{endRow}]]></if>
		</where>
	</select>
	
	<!-- 내가 쓴 리뷰댓글 갯수 조회 -->
 	<select id="myReviewReplyCount" parameterType="int" resultType="int">
 		select count(*) from plan_review_reply
 		<where>
 			<if test="writer > 0">writer = #{value}</if>
 		</where>
 	</select>
 	
 	<!-- 내가 쓴 리뷰댓글 조회 -->
 	<select id="myReviewReply" parameterType="boardDTO" resultType="boardDTO">
 		select * 
		from (select index_num, review, title, content, reg_date, rownum r
      		  from (select prr.index_num, prr.review, pr.title, prr.content, prr.reg_date 
      		  		from plan_review_reply prr, plan_review pr
            		where prr.review = pr.index_num and prr.writer = #{writer}
            		order by prr.index_num desc)
      		  order by index_num desc)	
		<where>
			<if test="startRow > 0"><![CDATA[r >= #{startRow}]]></if>
 			<if test="endRow > 0 and endRow > startRow"><![CDATA[and r <= #{endRow}]]></if>
		</where>
 	</select>
 	
 	<!-- 내가 쓴 리뷰댓글 입력 검색결과 수 -->
 	<select id="myReviewReplySearchCount" parameterType="searchDTO" resultType="int">
 		select count(*)
    	from plan_review_reply prr, plan_review pr
    	where prr.review = pr.index_num 
    	and prr.writer = #{writer}
    	and ${thema} like '%' || #{keyword} || '%'
 	</select>
 	
 	<!-- 내가 쓴 리뷰댓글 입력 검색결과 -->
 	<select id="myReviewReplySearch" parameterType="searchDTO" resultType="boardDTO">
 		select *
		from (select index_num, review, title, content, reg_date, rownum r    
      		  from (select prr.index_num, prr.review, pr.title, prr.content, prr.reg_date 
            		from plan_review_reply prr, plan_review pr
            		where prr.review = pr.index_num 
            		and prr.writer = #{writer}
            		and ${thema} like '%' || #{keyword} || '%'
            		order by prr.index_num desc)
      		  order by index_num desc)
		<where>
			<if test="startRow > 0"><![CDATA[r >= #{startRow}]]></if>
 			<if test="endRow > 0 and endRow > startRow"><![CDATA[and r <= #{endRow}]]></if>
		</where>
 	</select>
	
 
 </mapper> 