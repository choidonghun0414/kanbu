<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="board">
 
 	<!-- 공지 리스트 갯수 검색 -->
 	<select id="selectNoticeCount" resultType="int">
 		select count(*) from notice
 	</select>
 	
 	<!-- 공지 리스트 검색 -->
 	<select id="selectNotice" parameterType="boardDTO" resultType="boardDTO">
	 	select *
		from (select index_num, title, writer, nick, reg_date, views, rownum r
      		  from (select n.index_num, n.title, n.writer, m.nick, n.reg_date, n.views 
            		from notice n, member m
            		where n.writer = m.index_num
            		order by n.index_num desc)
      		  order by index_num desc)
      	<where>
 			<if test="startRow > 0"><![CDATA[r >= #{startRow}]]></if>
 			<if test="endRow > 0 and endRow > startRow"><![CDATA[and r <= #{endRow}]]></if>
 		</where>
	</select>
	
	<!-- 관리자 고유번호 검색 -->
	<select id="selectAdmin" resultType="int">
		select index_num
		from member
		where status = 100
	</select>
	
	<!-- 사용자 고유번호 검색 -->
	<select id="selectMember"  resultType="boardDTO" >
		select index_num
		from member
		where status = 1
	</select>
	
	<!-- 공지 작성 -->
 	<insert id="insertBoard" parameterType="boardDTO">
 		insert into notice (index_num, title, writer, content, reg_date) 
 		values (NOTICE_SEQ.nextval, #{title}, #{writer}, #{content}, sysdate)
 	</insert>
	
	<!-- 공지 상세보기 -->
	<select id="selectNoticeDetail" parameterType="int" resultType="boardDTO">
	 	select n.index_num, n.title, m.nick, n.content
		from notice n, member m
		where n.writer = m.index_num  
		and n.index_num = #{index_num}
	</select>
	
	<!-- 공지 수정 -->
	<update id="noticeUpdate">
		update notice
		set content = #{content}, title = #{title}
		where index_num = #{index_num}
	</update>
	
	<!-- 공지 삭제 -->
	<delete id="noticeDelete">
		delete
		from notice
		where index_num = #{index_num}
	</delete>
	
	<!-- 인기 여행 리뷰 리스트 -->
	<select id="popularReview" parameterType="int" resultType="boardDTO">
		select *
		from (select prv.index_num, prv.title, prv.writer, m.nick, prv.views, prv.reg_date, 
					 dense_rank() over (order by prv.views desc) rank
      		  from plan_review prv, member m
      		  where prv.writer = m.index_num)     
		<where>
			<if test="rownum > 0"><![CDATA[rownum <= #{value}]]></if>
		</where>
	</select>
	
	<!-- 인기 여행 리뷰 태그 리스트 갯수 -->
	<select id="popularTagReviewCount" parameterType="java.util.List" resultType="int">
		select count(*)
		from plan_review p, plan_review_tag pt, tag t
		where p.index_num = pt.review
		and pt.tag = t.index_num
        and p.index_num in 
        <foreach collection="list" item="index_num" open="(" close=")" separator=",">
        	#{index_num}
        </foreach>
	</select>
	
	<!-- 인기 여행 리뷰 태그 리스트 -->
	<select id="popularTagReview" parameterType="java.util.List" resultType="boardDTO">
		select p.index_num, p.title, t.name
		from plan_review p, plan_review_tag pt, tag t
		where p.index_num = pt.review
		and pt.tag = t.index_num
        and p.index_num in 
        <foreach collection="list" item="index_num" open="(" close=")" separator=",">
        	#{index_num}
        </foreach>
	</select>
	
	<!-- 여행 리뷰 리스트 갯수 -->
	<select id="selectReviewCount" resultType="int">
		select count(*) from plan_review
	</select>
	
	<!-- 여행 리뷰 리스트 -->
 	<select id="selectReview" parameterType="boardDTO" resultType="boardDTO">
	 	select *
		from (select index_num, title, nick, content, views, reg_date, rownum r
      		  from (select p.index_num, p.title, m.nick, p.content, p.views, p.reg_date
            		from plan_review p, member m
            		where m.index_num = p.writer
            		order by p.index_num desc)
      		  order by index_num desc)
      	<where>
 			<if test="startRow > 0"><![CDATA[r >= #{startRow}]]></if>
 			<if test="endRow > 0 and endRow > startRow"><![CDATA[and r <= #{endRow}]]></if>
 		</where>	  
	</select>
	
	<!-- 여행 리뷰 태그 리스트 갯수 -->
	<select id="selectReviewTagCount" resultType="int">
		select count(*)
		from plan_review p, plan_review_tag pt, tag t
		where p.index_num = pt.review
		and pt.tag = t.index_num
	</select>
	
	<!-- 여행 리뷰 태그 리스트 -->
	<select id="selectReviewTag" resultType="boardDTO">
		select p.index_num, p.title, t.name
		from plan_review p, plan_review_tag pt, tag t
		where p.index_num = pt.review
		and pt.tag = t.index_num
	</select>
	
	<!-- 여행 리뷰 상세 보기 -->
 	<select id="selectReviewDetail" parameterType="int" resultType="boardDTO">
	 	select p.index_num, p.title, p.writer, m.nick, p.content
		from plan_review p, member m
		where p.writer = m.index_num
		and p.index_num = #{index_num}
	</select>
	
	<!-- 여행 리뷰 상세 보기 태그 -->
	<select id="selectReviewDetailTag" parameterType="int" resultType="boardDTO">
		select p.index_num, p.title, t.name
		from plan_review p, plan_review_tag pt, tag t
		where p.index_num = pt.review
		and pt.tag = t.index_num
		and p.index_num = #{index_num}
	</select>
 
 	<!-- 여행 리뷰 작성 -->
 	<insert id="insertReview" parameterType="boardDTO">
	 	insert into plan_review (index_num, title, writer, content, reg_date) 
 		values (plan_review_SEQ.nextval, #{title}, #{writer}, #{content}, sysdate)
	</insert>
	
	<!-- 나의 여행 리뷰 리스트 갯수 -->
	<select id="selectMyReviewCount" parameterType="int" resultType="int">
		select count(*) from plan_review
		<where>
			<if test="writer > 0">writer = #{value}</if>
		</where> 
	</select>
	
	<!-- 나의 여행 리뷰 리스트 -->
 	<select id="selectMyReview" parameterType="boardDTO"  resultType="boardDTO">
	 	select *
		from (select index_num, title, nick, content, views, reg_date, rownum r         
      		  from (select p.index_num, p.title, m.nick, p.content, p.views, p.reg_date
           			from plan_review p, member m
           			where m.index_num = p.writer and p.writer = #{writer}
		   			order by p.index_num desc)
      		  order by index_num desc)
		<where>
			<if test="startRow > 0"><![CDATA[r >= #{startRow}]]></if>
 			<if test="endRow > 0 and endRow > startRow"><![CDATA[and r <= #{endRow}]]></if>
		</where>
	</select>
	
	<!-- 나의 여행 리뷰 태그 리스트 갯수 -->
	<select id="selectMyReviewTagCount" parameterType="int" resultType="int">
		select count(*)
		from plan_review p, plan_review_tag pt, tag t
		where p.index_num = pt.review
		and pt.tag = t.index_num
		and p.writer = #{value}
	</select>
	
	<!-- 나의 여행 리뷰 태그 리스트 -->
	<select id="selectMyReviewTag" parameterType="int" resultType="boardDTO">
		select p.index_num, p.title, t.name
		from plan_review p, plan_review_tag pt, tag t
		where p.index_num = pt.review
		and pt.tag = t.index_num
		and p.writer = #{value}
	</select>
	
	<!-- 나의 여행 리뷰 검색 리스트 갯수(제목) -->
	<select id="searchTitleMyReviewCount" parameterType="searchDTO" resultType="int">
		select count(*) from plan_review p
		<where>
			<if test="writer > 0">p.writer = #{writer}</if>
		</where>
		and ${thema} like '%' || #{keyword} || '%'
	</select>
	
	<!-- 나의 여행 리뷰 검색 리스트(제목) -->
 	<select id="searchTitleMyReview" parameterType="searchDTO"  resultType="boardDTO">
	 	select *
		from (select index_num, title, nick, content, views, reg_date, rownum r         
      		  from (select p.index_num, p.title, m.nick, p.content, p.views, p.reg_date
           			from plan_review p, member m
           			where m.index_num = p.writer and p.writer = #{writer}
           			and ${thema} like '%' || #{keyword} || '%'
		   			order by p.index_num desc)
      		  order by index_num desc)
		<where>
			<if test="startRow > 0"><![CDATA[r >= #{startRow}]]></if>
 			<if test="endRow > 0 and endRow > startRow"><![CDATA[and r <= #{endRow}]]></if>
		</where>
	</select>
	
	<!-- 나의 여행 리뷰 태그 검색 리스트 갯수(제목) -->
	<select id="searchTitleMyReviewTagCount" parameterType="searchDTO" resultType="int">
		select count(*)
		from plan_review p, plan_review_tag pt, tag t
		where p.index_num = pt.review
		and pt.tag = t.index_num
		and p.writer = #{writer}
		and ${thema} like '%' || #{keyword} || '%'
	</select>
	
	<!-- 나의 여행 리뷰 태그 검색 리스트(제목) -->
	<select id="searchTitleMyReviewTag" parameterType="searchDTO" resultType="boardDTO">
		select p.index_num, p.title, t.name
		from plan_review p, plan_review_tag pt, tag t
		where p.index_num = pt.review
		and pt.tag = t.index_num
		and p.writer = #{writer}
		and ${thema} like '%' || #{keyword} || '%'
	</select>
	
	<!-- 나의 여행 리뷰 검색 리스트 갯수(태그) 
	<select id="searchTagMyReviewCount" parameterType="searchDTO" resultType="int">
		select count(*)
		from (select p.index_num
			  from plan_review p, plan_review_tag pt, tag t
			  where p.index_num = pt.review
			  and pt.tag = t.index_num
			  and p.writer = #{writer}
			  and ${thema} like '%' || #{keyword} || '%'
        	  group by p.index_num)
	</select>
	-->
		
	<!-- 나의 여행 리뷰번호 검색 리스트(태그)
	<select id="searchTagMyReviewNum" parameterType="searchDTO" resultType="searchDTO">
		select p.index_num, p.writer
		from plan_review p, plan_review_tag pt, tag t
		where p.index_num = pt.review
		and pt.tag = t.index_num
		and p.writer = #{writer}
		and ${thema} like '%' || #{keyword} || '%'
        group by p.index_num, p.writer
        order by p.index_num desc
	</select>
	-->	
	
	<!-- 나의 여행 리뷰 검색 리스트(태그) 	
 	<select id="searchTagMyReview" parameterType="java.util.List" resultType="boardDTO">
	 	 select p.index_num, p.title, m.nick, p.content, p.views, p.reg_date
 		 from plan_review p, member m
 		 where m.index_num = p.writer 
 		 and p.writer = #{writer} 
 		 and p.index_num in
 		 <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
 		 	#{item.index_num}
 		 </foreach>
	</select>
 	-->	
 	
	<!-- 나의 여행 리뷰 태그 검색 리스트 갯수(태그) 
	<select id="searchTagMyReviewTagCount" parameterType="searchDTO" resultType="int">
		select count(*)
		from plan_review p, plan_review_tag pt, tag t
		where p.index_num = pt.review
		and pt.tag = t.index_num
		and p.writer = #{writer}
		and ${thema} like '%' || #{keyword} || '%'
	</select>
	-->
	
	<!-- 나의 여행 리뷰 태그 검색 리스트(태그) 
	<select id="searchTagMyReviewTag" parameterType="searchDTO" resultType="boardDTO">
		select p.index_num, p.title, t.name
		from plan_review p, plan_review_tag pt, tag t
		where p.index_num = pt.review
		and pt.tag = t.index_num
		and p.writer = #{writer}
		and ${thema} like '%' || #{keyword} || '%'
	</select>
	-->	
	
	<!-- 공지사항 조회수  -->
 	<update id="updateViews" parameterType="Integer">
    	update notice set views=views+1 where index_num=#{index_num}
 	</update>
 
 </mapper> 